---
- name: Create database for PowerDNS
  mysql_db:
    login_user: "{{ item.value.priv_user }}"
    login_password: "{{ item.value.priv_password }}"
    login_host: "{{ item.value.host }}"
    name: "{{ item.value.dbname }}"
    state: present
  become: false
  delegate_to: 127.0.0.1
  when: pdns_backends_mysql_credential is defined and item.key.split(':')[0] == 'gmysql'
  with_dict: "{{ pdns_backends | combine(pdns_backends_mysql_credential|default({}), recursive=True) }}"
  tags:
    - pdns-mysql-db

- name: Grant access to the DB for the PowerDNS
  mysql_user:
    login_user: "{{ item.0.priv_user }}"
    login_password: "{{ item.0.priv_password }}"
    login_host: "{{ item.0.host }}"
    name: "{{ item.0.user }}"
    password: "{{ item.0.password }}"
    host: "{{ item.1 }}"
    state: present
    priv: "{{ item.0.dbname }}.*:ALL"
  become: false
  delegate_to: 127.0.0.1
  when: pdns_backends_mysql_credential is defined
  with_subelements:
    - "{{ pdns_backends | combine(pdns_backends_mysql_credential|default({}), recursive=True) }}"
    - priv_host
    - skip_missing: yes
  tags:
    - pdns-mysql-db

- name: Import initial mysql schema (This won't delete or replace your current database)
  mysql_db:
    login_user: "{{ item.value.user }}"
    login_password: "{{ item.value.password }}"
    login_host: "{{ item.value.host }}"
    name: "{{ item.value.dbname }}"
    state: import
    target: "{{ pdns_mysql_schema_file }}"
  become: false
  delegate_to: 127.0.0.1
  when: item.key.split(':')[0] == 'gmysql'
  with_dict: "{{ pdns_backends }}"
  tags:
    - pdns-mysql-db
