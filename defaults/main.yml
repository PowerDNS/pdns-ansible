---
pdns_installation_type: packages
pdns_repo_provider: os
# XXX: stable doesnt work yet
pdns_repo_branch: master

# The user and group to run as.
# NOTE: at the moment, we don't create a user as we assume the package creates
# a "pdns" user and group. If you change these variables, make sure to create
# the user and groups before applying this role
pdns_user: pdns
pdns_group: pdns

# The directory where the config is located
pdns_config_dir: '/etc/powerdns'
pdns_config_dir_user: "{{ pdns_config_dir }}/pdns.d"

# This is the dictionary var for all backends.
# backendname: packagename
pdns_backends_dict:
  geo: pdns-backend-geo
  geoip: pdns-backend-geoip
  gmysql: pdns-backend-mysql
  gpgsql: pdns-backend-pgsql
  gsqlite3: pdns-backend-sqlite3
  ldap: pdns-backend-ldap
  lmdb: pdns-backend-lmdb
  lua: pdns-backend-lua
  mydns: pdns-backend-mydns
  pipe: pdns-backend-pipe
  remote: pdns-backend-remote
  tinydns: pdns-backend-tinydns

# pdns_config: A dict containing all configuration options, except for backend
# configuration and the "config-dir", "setuid" and "setgid" directives.
# NOTE: Right now, we don't verify the options when configuring the server.
#
# Example:
# pdns_config:
#  master: yes
#  slave: no
#  local-address: '192.0.2.53'
#  local-ipv6: '2001:DB8:1::53'
#  local-port: '5300'
pdns_config: {}

# pdns_backends: A dict with all the backends you'd like to have. You can use
# the multiple backends of the same kind by using {backend}-{instance_name}.
#
# For example:
# pdns_backends:
#   'gmysql:one':
#     'user': root
#     'host': 127.0.0.1
#     'password': root
#     'dbname': pdns
#   'gmysql:two':
#     'user': pdns_user
#     'host': 192.0.2.15
#     'password': my_password
#     'dbname': dns
#   'bind':
#     'config': '/etc/named/named.conf'
#     'hybrid':  yes
#     'dnssec-db': '{{pdns_config_dir/dnssec.db}}'
#
# This default starts just the bind-backend with an empty config file
pdns_backends:
  bind:
    config: '/dev/null'

# MySQL credential to create database per backend
# You must put only gmysql backend
#
# For example:
# pdns_backends_mysql_credential:
#   'gmysql:one':
#     'priv_user': root
#     'priv_password': my_first_password
#     'priv_host':
#       - "localhost"
#       - "%"
#   'gmysql:two':
#     'priv_user': someprivuser
#     'priv_password': my_second_password
#     'priv_host':
#       - "localhost"

# Full path to mysql schema file
pdns_mysql_debian_schema_file:
  os: /usr/share/dbconfig-common/data/pdns-backend-mysql/install/mysql
  powerdns: /usr/share/doc/pdns-backend-mysql/schema.mysql.sql

# Dependencies to initial mysql database
pdns_debian_mysql_dependencies:
  - python-mysqldb
  - mysql-client
pdns_rhel_mysql_dependencies:
  - MySQL-python
  - mysql

# Dependencies to build PowerDNS on different distros
pdns_debian_dependencies: []
pdns_rhel_dependencies: []

# Dependency packages per backend
pdns_backend_debian_dependencies: {}
pdns_backend_rhel_dependencies: {}
