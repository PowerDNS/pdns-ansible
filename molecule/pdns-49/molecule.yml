---

scenario:
  name: pdns-49

driver:
  name: docker

dependency:
  name: galaxy

platforms:
  - name: centos-7
    groups: ["pdns"]
    image: centos:7
    dockerfile_tpl: centos-systemd

  - name: rockylinux-8
    groups: ["pdns"]
    image: rockylinux:8
    dockerfile_tpl: centos-systemd

  - name: almalinux-8
    groups: ["pdns"]
    image: almalinux:8
    dockerfile_tpl: centos-systemd

  - name: rockylinux-9
    groups: ["pdns"]
    image: rockylinux:9.0
    dockerfile_tpl: centos-systemd

  - name: almalinux-9
    groups: ["pdns"]
    image: almalinux:9
    dockerfile_tpl: centos-systemd

  - name: oraclelinux-9
    groups: ["pdns"]
    image: oraclelinux:9
    dockerfile_tpl: centos-systemd

  - name: oraclelinux-8
    groups: ["pdns"]
    image: oraclelinux:8
    dockerfile_tpl: centos-systemd

  - name: ubuntu-2004
    groups: ["pdns"]
    image: ubuntu:20.04
    tmpfs:
      - /run
      - /tmp
    dockerfile_tpl: debian-systemd

  - name: debian-10
    groups: ["pdns"]
    image: debian:10
    privileged: True
    volume_mounts:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    tmpfs:
      - /run
      - /run/lock
      - /tmp
    dockerfile_tpl: debian-systemd
    environment: { container: docker }

  # In order to run the tests we need
  # a MySQL container to be up & running
  - name: mysql
    image: mysql:5.7
    env:
      MYSQL_ROOT_PASSWORD: pdns
    # Declaring the container as service,
    # will link it to the others Platforms containers
    # on creation.
    is_service: yes
  
  # In order to run the tests we need
  # a PostgreSQL container to be up & running
  - name: pgsql
    image: postgres:16.2
    env:
      POSTGRES_PASSWORD: pdns
      POSTGRES_HOST_AUTH_METHOD: "md5"
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    # Declaring the container as service,
    # will link it to the others Platforms containers
    # on creation.
    is_service: yes

provisioner:
  name: ansible
  options:
    diff: True
    v: True
  config_options:
    defaults:
      gathering: smart
      fact_caching: jsonfile
      fact_caching_connection: .ansible_cache
      fact_caching_timeout: 7200
    ssh_connection:
      pipelining: true
  inventory:
    links:
      host_vars: ../resources/host_vars/
  playbooks:
    create: ../resources/create.yml
    destroy: ../resources/destroy.yml
    prepare: ../resources/prepare.yml
    # "systemctl used in place of systemd module" "ANSIBLE0006"
    # "Tasks that run when changed should likely be handlers" "ANSIBLE0016"
    # "Shells that use pipes should set the pipefail option" "306"
  lint: ansible-lint -x ANSIBLE0006 ANSIBLE0016 306

lint: yamllint defaults tasks meta vars

verifier:
  name: testinfra
  options:
    hosts: "pdns"
    vvv: True
  directory: ../resources/tests/all
  additional_files_or_dirs:
    # path relative to 'directory'
    - ../repo-49/
    - ../backend-sqlite/
    - ../backend-pgsql/
    - ../backend-mysql/
    - ../systemd-override/

